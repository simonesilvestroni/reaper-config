// Pan active takes randomly (normal distr.) -> create take pan envelopes
// NOTE: replaces all existing take pan envelopes in selected items (active takes)
// EEL script by spk77 23.11.2014
// Version: 0.2018.04.19

@import ../../Functions/spk_slider_class.eel

// init
function init()
(
  gfx_init("Pan active takes randomly",420,200);
  gfx_setfont(1, "Arial", 14);
  lmb_click_outside_window = 1;
  buf = 10000;
  gfx_measurestr("Randomize", s_w, s_h);
  
  refresh_on_slider_change = 1;
  m.val = 0; // mean slider initial value
  s.val = 10; // standard_dev initial value
);

#new_chunk_header = "<TRACK_ENVELOPE_UNKNOWN
ACT 1
VIS 1 1 1
LANEHEIGHT 0 0
ARM 1
DEFSHAPE 0 -1 -1
";

#new_chunk_tail = ">
";

function get_set_envelope(take, envelope_name) local(env)
(
  //#new_chunk = "";
  // if "take envelope" doesn't exist -> create envelope
  (env = GetTakeEnvelopeByName(take, envelope_name) == 0) ? (
    envelope_name == "Volume" ? Main_OnCommand(NamedCommandLookup("_S&M_TAKEENV1"), 0); // show take volume envelope
    envelope_name == "Pan" ? Main_OnCommand(NamedCommandLookup("_S&M_TAKEENV2"), 0); // show take pan envelope
    envelope_name == "Mute" ? Main_OnCommand(NamedCommandLookup("_S&M_TAKEENV3"), 0); // show take mute envelope
    envelope_name == "Pitch" ? Main_OnCommand(NamedCommandLookup("_S&M_TAKEENV10"), 0); // show take pitch envelope
  );
  // now it should exist -> get source take's "take envelope pointer"
  (env = GetTakeEnvelopeByName(take, envelope_name)) ? (
    GetSetEnvelopeState(env, #new_chunk);
  );
);

function create_new_envelope_chunk(take)
(
  #new_chunk = "";
  #new_chunk += #new_chunk_header;
  #new_chunk += #new_chunk_points;
  #new_chunk += #new_chunk_tail;
  //get_set_envelope(take, "Pan");
);

function create_points(take)
(
  #new_chunk_points = "";
  #new_chunk_points += "PT ";
  #new_chunk_points += sprintf(#, "%f ", 0);
  #new_chunk_points += sprintf(#, "%f ", -GetMediaItemTakeInfo_Value(take, "D_PAN")); 
  #new_chunk_points += "0 0 1";
  #new_chunk_points += "\n";
  //#new_chunk_points != "" ? 1 : 0;
  //#new_chunk_points != "" ? create_new_envelope()
);

function add_envelope() local(i, item, take)
(
  i = 0;
  loop(CountSelectedMediaItems(0), 
    (item = GetSelectedMediaItem(0, i)) ? (
      (take = GetActiveTake(item)) ? (
        create_points(take);
        create_new_envelope_chunk(take);
        get_set_envelope(take, "Pan");
        SetMediaItemTakeInfo_Value(take, "D_PAN", 0.0);
      );
    );
    i += 1;
  );
  UpdateArrange();
  Undo_OnStateChange("Pan active takes randomly");
);

function set_default_colors()
(
  gfx_r = 0.5;
  gfx_g = 0.8;
  gfx_b = 0.5;
);

function rand_pan(mean, standard_dev) local (i)
(
  mean /= 100;
  standard_dev /= 100;
  i = 0;
  memset(buf, 0, buflen);
  buflen = 0;
  loop(CountSelectedMediaItems(0),
  //loop(2000,
    (item = GetSelectedMediaItem(0, i)) ? (
      (take = GetActiveTake(item)) ? (
        R = 0;
        G = rand(2) - 1 + rand(2) - 1 + rand(2) - 1;
        R = G * standard_dev + mean;
        //R < -1 ? R += abs(R + 1);
        //R > 1 ? R -= (R - 1);
        R < -1 ? R += abs(R - mean);
        R > 1 ? R -= (R - mean);
        buf[i] = R;
        buflen += 1;
      );
    );
    i += 1;
  );
);

function set_pan() local (i)
(
  i = 0;
  loop(buflen,
    (item = GetSelectedMediaItem(0, i)) ? (
      (take = GetActiveTake(item)) ? (
        SetMediaItemTakeInfo_Value(take, "D_PAN", buf[i]); // -1.0 to 1.0 (100L to 100R)
      );
    );
    i += 1;
  );
  UpdateArrange();
  Undo_OnStateChange("Pan active takes randomly");
);

function randomize_btn(x, y, s_w, s_h, r, mean, standard_dev)
( 
  gfx_x = x; gfx_y = y;
  set_default_colors();
  mouse_x >= x && mouse_x <= x + s_w && mouse_y >= y && mouse_y <= y + gfx_texth/* && lmb_click_outside_window == 0/* && max_point_drag_started == 0 && min_point_drag_started* == 0*/ ? (
      gfx_a = 1;
      gfx_r += 0.1;
      gfx_g += 0.1;
      gfx_b += 0.1;
    mouse_cap == 1 && lmb_down == 0 ? (
      
      lmb_down = 1;
      rand_pan(mean, standard_dev);
    );
  );
  gfx_printf("Randomize");
);

function apply_btn(x, y, s_w, s_h, r)
( 
  gfx_x = x; gfx_y = y;
  set_default_colors();
  mouse_x >= x && mouse_x <= x + s_w && mouse_y >= y && mouse_y <= y + gfx_texth/* && lmb_click_outside_window == 0/* && max_point_drag_started == 0 && min_point_drag_started* == 0*/ ? (
      gfx_a = 1;
      gfx_r += 0.1;
      gfx_g += 0.1;
      gfx_b += 0.1;
    mouse_cap == 1 && lmb_down == 0 ? (
      
      lmb_down = 1;
      set_pan();
      add_envelope();
    );
  );
  gfx_printf("Apply");
);


function run() local (s_w, s_h, hue, sat, lum, v)
(
  //mouse_cap == 0 ? m_x = mouse_x;

  set_default_colors();
  gfx_a = 1;

  //draw_end_x = gfx_w - 20;
  //draw_end_y = gfx_h - 80;
  gfx_x = 20;
  gfx_y = 20;
  
  //center_x = floor(draw_start_x + (draw_end_x - draw_start_x) / 2 + 0.5);
  //center_y = floor(draw_start_y + (draw_end_y - draw_start_y) / 2 + 0.5);
  
  //gfx_a = 0.4;
  //gfx_line(center_x, 20, center_x, gfx_h - 20);


  // check if "lmb down" and "mouse cursor is not in window" and "not currently moving slider"
  mouse_cap >= 1 && (mouse_x <= 0 || mouse_x >= gfx_w || mouse_y < 2 || mouse_y >= gfx_h) && drag_started == 0 ? (
    lmb_click_outside_window = 1;
  ) : mouse_cap == 0 ? (
    lmb_click_outside_window = 0;
  );
  
   mouse_cap == 0 ? (
    max_point_drag_started = 0; min_point_drag_started = 0; lmb_down = 0;
  );
  

  mean = m.slider(20, 20, 6, m.val, -100, 100, gfx_w - 30, 0);
  standard_dev = s.slider(20, 20+30, 6, s.val, 0, 40, gfx_w - 30, 1);

  randomize_btn(10, 150, 50, s_h, 6, mean, standard_dev);
  apply_btn(10, 170, 50, s_h, 6);
  
  
  refresh_on_slider_change && (m.val != last_mean || standard_dev != last_standard_dev) ? rand_pan(mean, standard_dev);
  
  mouse_cap == 5 && last_slider_id == 0 ? ( // ctrl+lmb to reset to center
    m.val = 0;
    //rand_pan(mean, standard_dev) // update the preview window
  );
  
/*  // add "undo point" if flag set
  undo_block == 1 && drag_started == 0 ? (
    undo_block = 0;
    Undo_OnStateChange("Adjust track colors");
  ); */
  
  char = gfx_getchar();
  // ctrl+lmb to Undo
  
  char == 114 ? ( // "r" pressed -> run function "rand_pan"
    rand_pan(mean, standard_dev);
  );
  
  char == 26 ? (
    Main_OnCommand(40029, 0); // undo
  );
  
  // Esc to exit
  char == 27 ? (
    undo_block == 1 ? (
      Undo_OnStateChange("Adjust track colors");
    );
    gfx_quit();
  );
  char >= 0 ? (
    defer("run();");
  );
  
  i = 0;
  gfx_a = 1;
  loop(buflen,
    gfx_x = gfx_w/2 + gfx_w/2*buf[i];
    gfx_y = 100;
    gfx_line(gfx_x, gfx_y, gfx_x , gfx_y + 20, 1);
    i+=1;
  );

  last_h = gfx_h;
  last_w = gfx_w;
  last_selected_track = sel_track;
  last_mean = mean;
  last_standard_dev = standard_dev;
  gfx_update();
);

init();
run();
