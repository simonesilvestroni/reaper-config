/**
 * ReaScript Name: Add stretch markers to selected items at grid divisions
 * Description: See name.
 * Instructions: Select items. Run.
 * Screenshot: https://i.imgur.com/9kX8HGY.gif
 * Author: X-Raym
 * Author URI: http://extremraym.com
 * Repository: GitHub > X-Raym > EEL Scripts for Cockos REAPER
 * Repository URI: https://github.com/X-Raym/REAPER-EEL-Scripts
 * File URI: https://github.com/X-Raym/REAPER-EEL-Scripts/scriptName.eel
 * Licence: GPL v3
 * Forum Thread: Scripts (EEL): Add stretch markers (various)
 * Forum Thread URI: http://forum.cockos.com/showthread.php?p=1511145
 * REAPER: 5.0
 * Extensions: SWS S&M 2.8.2
 * Version: 1.1
*/
 
/**
 * Changelog:
 * v1.1 (2018-09-12)
   + Time selection support 
 * v1.0 (2015-11-26)
   + Initial release. 
 */

// ----- DEBUGGING ====>
/*@import ../Functions/X-Raym_Functions - console debug messages.eel

debug = 1; // 0 => No console. 1 => Display console messages for debugging.
clean = 1; // 0 => No console cleaning before every script execution. 1 => Console cleaning before every script execution.

msg_clean();*/
// <==== DEBUGGING -----

// FROM PLANET NINE
function rev_sm_comp(sp1, p1, sp2, p2, cmip)
(
  ucmip =((sp2-sp1)*(cmip-p1))/(p2-p1) + sp1;
);

// FROM PLANET NINE
function src_offset(f_position, f_item, f_take) local(pos, spos)
(
  item_pos = GetMediaItemInfo_value(f_item, "D_POSITION");
  item_length = GetMediaItemInfo_value(f_item, "D_LENGTH");
  take_offset = GetMediaItemTakeInfo_value(f_take, "D_STARTOFFS");
  take_playrate = GetMediaItemTakeInfo_value(f_take, "D_PLAYRATE");
  
  cmip = (f_position - item_pos) * take_playrate; //+ take_offset; //compensated *item* position
  
  num_sm = GetTakeNumStretchMarkers(f_take); // num of SMs
  num_sm !=0 ?
  (
    sp1 = 0; p1 = 0;
    sp2=0; smc = 0;
    while (smc < num_sm) // scan stretch markers to find SM indexes either side of marker.
    (
      GetTakeStretchMarker(f_take, smc, pos, spos);
      pos <= cmip ? // compare compensated (SM-moved) with SM *pos*
      (
        smi = smc; // sm index = sm count
        sp1 = spos; // source-pos1 = source pos of this sm
        p1 = pos // pos1 = pos of this sm
      ):( 
        sp2 = spos; // else source-pos2 = source pos of this sm
        p2 = pos; // pos2 = pos of this sm
        smc = num_sm+1; // exit loop
      );
      smc +=1;
    );
    GetTakeStretchMarker(lm_take, smi, p1, sp1); // get LHS SM
    smi < num_sm -1 ? 
    (
      ucmip = rev_sm_comp(sp1, p1, sp2, p2, cmip);  // calc uncompensated mkr item position (*item* time)
      section_playrate = ((sp2-sp1)/(p2-p1))*take_playrate;
    ):(
      ucmip = (cmip - p1) + sp1; // beyond last SM, item time becomes sp1 at p1 and SM rate =1
      section_playrate = take_playrate;
    );
    // ORIGINAL = position_source_offset = ucmip + take_offset;
    position_source_offset = ucmip; // convert from item pos to source position
    sm_dev_flag = num_sm>=3 && (sp1 != p1 || sp2 != p2) && (sp1-p1) != (sp2-p2) && smi < num_sm-1; // set SM deviated flag (either side SM moved)
    
  ):(
  // Calculate a position's source offset, using item & take parameters...
    sp1 =0; p1 =0; sp2 =0; p2 =0; sm_dev_flag =0; // reset values if no SMs
    position_source_offset = (f_position - item_pos) * take_playrate + take_offset; // no SMs
  );
  position_source_offset; // return value
);


// THE THING
function main() local (i, j, item, take, track)
(
  Undo_BeginBlock(); // Begining of the undo block. Leave it at the top of your main function.

  // LOOP THROUGH SELECTED TAKES
  tempo_markers_count = CountTempoTimeSigMarkers(0);
  selected_items_count = CountSelectedMediaItems(0);
  
  GetSet_LoopTimeRange2( 0, 0, 0, start_time, end_time, 0); 
  
  start_time != end_time ? time_selection = 1;

  i = 0; // INITIALIZE loop through selected items
  loop(selected_items_count, (item = GetSelectedMediaItem(0, i)) ? (
      item_start = GetMediaItemInfo_Value(item, "D_POSITION");
      item_end = item_start + GetMediaItemInfo_Value(item, "D_LENGTH");

      count_takes = CountTakes(item);
      
      // LOOP IN TAKES
      k = 0;
      loop(count_takes,
      
        take=GetTake(item, k);

        take_playrate = GetMediaItemTakeInfo_Value(take, "D_PLAYRATE");
        
        time_selection == 1 ? (
          start = max(start_time, item_start);
          end = min(end_time, item_end);
        ):(
          start = item_start;
          end = item_end; 
        );

        first_grid = extension_api("BR_GetClosestGridDivision", start);
        first_grid < start ? first_grid = extension_api("BR_GetNextGridDivision", first_grid);

        first_marker = 0;
        start <= first_grid && end >= first_grid ? (
          offset = src_offset(first_grid, item, take);
          SetTakeStretchMarker(take, -1, (first_grid-item_start)*take_playrate, offset);
          first_marker = 1;
          grid = first_grid;
        );

        first_marker == 1 ? (

          while ( grid <= end ) (
            grid = extension_api("BR_GetNextGridDivision", grid);

            // Strech marker pos depends on take playrate
            start <= grid && end >= grid ? (
              offset = src_offset(grid, item, take);
              SetTakeStretchMarker(take, -1, (grid-item_start)*take_playrate, offset);
            );

          );
        );
        
        k+=1; // Increment Take ID
      );// END LOOP TAKES
    ); // ENDIF selected items
    
    i += 1; // INCREMENT loop through selected items
  ); // ENDLOOP through selected items

  Undo_EndBlock("Add stretch markers to selected items at grid divisions", -1); // End of the undo block. Leave it at the bottom of your main function.
);

PreventUIRefresh(1);

main(); // Execute your main function

UpdateArrange(); // Update the arrangement (often needed)

PreventUIRefresh(-1);
