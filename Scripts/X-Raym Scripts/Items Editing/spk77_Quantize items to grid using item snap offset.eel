/**
 * ReaScript Name: Quantize items to grid using item snap offset
 * Description: See title.
 * Instructions: Assign the script to a keyboard shortcut, and load it into MIDI actions, from the MIDI editor Action window.
 * Author: spk77
 * Author URI: 
 * Repository: 
 * Repository URI: 
 * File URI:
 * Licence: GPL v3
 * Forum Thread: EEL: Quantize tool (for item positions)
 * Forum Thread URI: http://forum.cockos.com/showthread.php?t=145243
 * REAPER: 5.0
 * Extensions: SWS/S&M 2.6.3 #0
 * Version: 1.0
*/
 
/**
 * Changelog:
 * v1.0 (2015-02-10)
	+ Initial release
 */

//// Quantize tool - EEL script by spk77 28.8.2014
//
// - slider values from 0% to 100% -> quantizes selected items (positions) by X percent towards grid
// - slider values from 0% to -100% -> unquantizes selected items (positions) by X percent away from grid
// - ctrl + z to undo
// - esc to close

function set_default_colors()
(
  gfx_r = 0.5;
  gfx_g = 0.8;
  gfx_b = 0.5;
);
  
function scale_x_to_range(range_start, range_end, x_coord, x_start_offs, x_end_offs) local (scaled_x)
(
  scaled_x = range_end - (range_end - range_start) * (x_coord - x_start_offs) / (gfx_w - x_start_offs - x_end_offs);
  scaled_x > range_end ? scaled_x = range_end;
  scaled_x < range_start ? scaled_x = range_start;
  scaled_x;
);

function slider (x,y,r) local (m_x, fill, s_w, s_h)
(
  fill = 0;
  gfx_r = 0.8;
  gfx_g = 0.8;
  gfx_b = 0.8;
  m_x = center_x;
  (mouse_x >= draw_start_x - r && mouse_x <= draw_end_x && mouse_y >= y - r && mouse_y <= y + r) || drag_started == 1 && lmb_click_outside_window == 0 && lmb_down == 0 ? (
    gfx_b += 0.1;
    drag_started = 0;
    mouse_cap == 1 ? (
      drag_started = 1;
      gfx_b += 0.2;
      m_x = mouse_x;
      mouse_x > draw_end_x ? m_x = draw_end_x;
      mouse_x < draw_start_x ? m_x = draw_start_x;
      fill = 1;
    ) : (
      drag_started = 0;
      m_x = center_x;
      fill = 1;
    );
  );
  
  slider_val = 100 - scale_x_to_range (0, 200, m_x, draw_start_x, gfx_w - draw_end_x);
  gfx_circle(m_x, y, r, fill);
  
  gfx_measurestr(sprintf(slider_val_str, "%d", slider_val), s_w, s_h);
  gfx_a = 1;
  gfx_x = m_x - r/2 - s_w/2;
  gfx_y = y - gfx_texth - 6;
  gfx_printf("%s %%", slider_val_str);

  slider_last_x = m_x;
  //last_slider_val = slider_val;
);

function quantize() local (item, pos)
(
  drag_started == 0 || mouse_cap == 0 ? sel_item_array_created = 0;
  drag_started == 1 && slider_val != last_slider_val ? (
    sel_item_array_created == 0 ? (
      memset(sel_item_array, 0, sel_item_count*2);
      sel_item_count = 0;
      i_i = 0;
      loop(CountSelectedMediaItems(0),
        item = GetSelectedMediaItem(0, i_i);
        pos = GetMediaItemInfo_Value(item, "D_POSITION") + GetMediaItemInfo_Value(item, "D_SNAPOFFSET");
        sel_item_array[i_i * 2] = item;
        sel_item_array[i_i * 2 + 1] = pos;
        sel_item_count += 1;
        i_i += 1;
      );
      sel_item_array_created = 1;
    );
    GetToggleCommandState(1157) ? (
      snap = 1;
    ) : (
      snap = 0;
      Main_OnCommand(1157, 0);
    );
    GetToggleCommandState(40145) ? (
      grid = 1;
    ) : (
      grid = 0;
      Main_OnCommand(40145, 0);
    );
    i = 0;
    loop(sel_item_count,
      item = sel_item_array[i * 2];
      pos = sel_item_array[i * 2 + 1];
      SetMediaItemInfo_Value(item, "D_POSITION", pos - slider_val / 100 * (pos - (SnapToGrid(0, pos))) - GetMediaItemInfo_Value(item, "D_SNAPOFFSET"));
      i += 1;
    );
    undo_block = 1;
    snap == 0 ? Main_OnCommand(1157, 0);
    grid == 0 ? Main_OnCommand(40145, 0);
  );
  last_slider_val = slider_val;
  //UpdateArrange();
);

function run() local (s_w, s_h)
(
  
  set_default_colors();
  gfx_a = 1;

  draw_end_x = gfx_w - 22;
  draw_end_y = gfx_h - 80;
  gfx_x = draw_start_x;
  gfx_y = draw_start_y;
  
  center_x = floor(draw_start_x + (draw_end_x - draw_start_x) / 2 + 0.5);
  center_y = floor(draw_start_y + (draw_end_y - draw_start_y) / 2 + 0.5);
  
  gfx_w != last_w ? (
    center_x = floor(draw_start_x + (draw_end_x - draw_start_x) / 2 + 0.5);
    slider_last_x = center_x;
    last_w = gfx_w;
  );

  // check if "lmb down" and "mouse cursor is not in window" and "not currently moving slider"
  mouse_cap >= 1 && (mouse_x <= 0 || mouse_x >= gfx_w || mouse_y < 2 || mouse_y >= gfx_h) && drag_started == 0 ? (
    lmb_click_outside_window = 1;
  ) : mouse_cap == 0 ? (
    lmb_click_outside_window = 0;
  );

  slider(center_x, gfx_h - center_y, 4);

  gfx_r = 0.7;
  gfx_g = 0.7;
  gfx_b = 1;
  gfx_a = 0.2;
  
  gfx_line(draw_start_x, gfx_h - center_y, draw_end_x, gfx_h - center_y);
  gfx_line(draw_start_x, gfx_h - center_y - 10, draw_start_x, gfx_h - center_y + 10);
  gfx_line(draw_end_x, gfx_h - center_y - 10, draw_end_x, gfx_h - center_y + 10);

  gfx_a = 0.8;
  gfx_y = gfx_h - center_y - 3 * gfx_texth;
  
  gfx_measurestr("<- Unquantize | Quantize ->  ", e_w, e_h);
  gfx_x = center_x - floor(e_w / 2 + 0.5);
  
  gfx_drawstr("<- Unquantize | Quantize ->  ");

  
  // call the quantize function
  quantize();
  
  // add "undo point" if necessary
  undo_block == 1 && drag_started == 0 ? (
    undo_block = 0;
    Undo_OnStateChange("Quantize item positions by X percent");
  );
  
  char = gfx_getchar();
  // ctrl+lmb to Undo
  char == 26 ? (
    Main_OnCommand(40029, 0); // undo
  );
  // Esc to exit
  char == 27 ? (
    undo_block == 1 ? (
      Undo_OnStateChange("Quantize item positions by X percent");
    );
    gfx_quit();
  );
  char >= 0 ? (
    defer("run();");
  );

  last_h = gfx_h;
  last_w = gfx_w;
  gfx_update();
);

// init
function init()
(
  gfx_init("Quantize tool",250,80);

  last_w = gfx_w;
  last_h = gfx_h;

  draw_start_x = 22;
  draw_end_x = gfx_w - 22;
  draw_start_y = 30;
  draw_end_y = gfx_h - 80;
  center_x = floor(draw_start_x + (draw_end_x - draw_start_x) / 2 + 0.5);
  center_y = floor(draw_start_y + (draw_end_y - draw_start_y) / 2 + 0.5);

  gfx_setfont(1, "Arial", 14);

  slider_last_x = draw_start_x;
  lmb_click_outside_window = 0;
  last_clicked_cc_lane == -1;
  
  sel_item_array = 10000;
);

init();
run();