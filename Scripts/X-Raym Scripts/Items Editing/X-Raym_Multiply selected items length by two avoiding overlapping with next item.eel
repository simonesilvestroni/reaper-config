/**
 * ReaScript Name: Multiply selected items length by two avoiding overlapping with next item
 * Description: Multiply selected items length by two avoiding overlapping with next item
 * Instructions: Here is how to use it. (optional)
 * Author: X-Raym
 * Author URI: http://extremraym.com
 * Repository: GitHub > X-Raym > EEL Scripts for Cockos REAPER
 * Repository URI: https://github.com/X-Raym/REAPER-EEL-Scripts
 * File URI: https://github.com/X-Raym/REAPER-EEL-Scripts/scriptName.eel
 * Licence: GPL v3
 * Forum Thread: Script: Script name
 * Forum Thread URI: http://forum.cockos.com/***.html
 * Version: 1.0
 * Version Date: 2015-03-14
 * REAPER: 4.76
 * Extensions: None
 */
 
/**
 * Changelog:
 * v1.0 (2015-03-14)
	+ Initial Release
 */

// ----- DEBUGGING ====>
/*@import ../Functions/X-Raym_Functions - console debug messages.eel

debug = 1; // 0 => No console. 1 => Display console messages for debugging.
clean = 1; // 0 => No console cleaning before every script execution. 1 => Console cleaning before every script execution.

msg_clean();*/
// <==== DEBUGGING -----

function main() // local (i, j, item, take, track)
(
	Undo_BeginBlock(); // Begining of the undo block. Leave it at the top of your main function.

	// LOOP THROUGH SELECTED ITEMS
	selected_items_count = CountSelectedMediaItems(0);
	
	i = 0; // INITIALIZE loop through selected items
	loop(selected_items_count, (item = GetSelectedMediaItem(0, i)) ? (
			// GET INFOS
			item_pos = GetMediaItemInfo_Value(item, "D_POSITION"); // Get the value of a the parameter
			item_length = GetMediaItemInfo_Value(item, "D_LENGTH"); // Get the value of a the parameter
			item_end = item_pos + item_length;
			//msg_dtl("Selected item length", item_length, 1);

			item_multiplied_length = item_length * 2;
			item_multiplied_end = item_pos + item_multiplied_length;
			//msg_dtl("Selected item length multiplied", item_length_multiplied, 1);

			track = GetMediaItem_Track(item);
			item_id = GetMediaItemInfo_Value(item, "IP_ITEMNUMBER");

			next_item = GetTrackMediaItem(track, item_id+1);

			next_item ? (
				next_item_pos = GetMediaItemInfo_Value(next_item, "D_POSITION");
				//msg_dtl("Next item pos", next_item_pos, 1);

				// IF SEL ITEM LENGTH x2 IS SUPERIOR THAN NEXT ITEM POS
				item_multiplied_end >= next_item_pos ? (
					item_multiplied_length = next_item_pos - item_pos;
					//msg_dtl("Selected item length final", item_length_multiplied, 1);
				);

			);
			
			// SET INFOS
			SetMediaItemInfo_Value(item, "D_LENGTH", item_multiplied_length); // Set the value to the parameter
		); // ENDIF inside loop selected items
		i += 1; // INCREMENT loop through selected items
	); // ENDLOOP through selected items

	// YOUR CODE ABOVE

	Undo_EndBlock("Multiply selected items length by two avoiding overlapping with next item", 0); // End of the undo block. Leave it at the bottom of your main function.
);

//msg_start(); // Display characters in the console to show you the begining of the script execution.

main(); // Execute your main function

UpdateArrange(); // Update the arrangement (often needed)

//msg_end(); // Display characters in the console to show you the end of the script execution.